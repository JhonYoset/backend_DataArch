version: '3.8'


# deploy running backend service
# from this directory
# Commands to run:
# cd backend_DataArch
# docker compose --env-file .env.docker -f docker-compose.production.yml up --build -d

# Require .env.production_container and .env.docker
# .env.production_container is used for production environment variables
# .env.docker is used for Docker-specific environment variables

# Also requires that the traefik-compose.yml is running

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env.production_container
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB}
      DOMAIN_BACKEND: ${DOMAIN_BACKEND}
    depends_on:
      - postgres
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      # HTTP Router
      - "traefik.http.routers.backend-http.rule=Host(`${DOMAIN_BACKEND}`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=https-redirect"
      # HTTPS Router
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN_BACKEND}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      # Middlewares
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"

volumes:
  postgres_data:
    name: postgres-data

networks:
  traefik-network:
    external: true
    name: traefik-network
