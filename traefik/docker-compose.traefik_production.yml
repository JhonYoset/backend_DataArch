version: '3.8'

# deploy running Traefik service. Run before deploying other services
# from this directory
# Commands to run:
# (from the root of the project)
# docker compose --env-file .env.traefik -f docker-compose.traefik_production.yml up -d

# Require .env.traefik
# .env.traefik is used for Traefik-specific environment variables

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL:-INFO}"
      - "--api=true"
      - "--api.dashboard=false"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      # Security configuration
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${DOMAIN_FRONTEND}"
      - "--entrypoints.websecure.http.tls.domains[1].main=${DOMAIN_BACKEND}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/letsencrypt
    networks:
      - traefik-network
    restart: unless-stopped
    environment:
      - DOMAIN_FRONTEND=${DOMAIN_FRONTEND}
      - DOMAIN_BACKEND=${DOMAIN_BACKEND}
      - ACME_EMAIL=${ACME_EMAIL}

volumes:
  traefik-data:
    name: traefik-data

networks:
  traefik-network:
    name: traefik-network
    driver: bridge
